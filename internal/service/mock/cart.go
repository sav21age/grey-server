// Code generated by MockGen. DO NOT EDIT.
// Source: cart.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	domain "grey/internal/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCartInterface is a mock of CartInterface interface.
type MockCartInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCartInterfaceMockRecorder
}

// MockCartInterfaceMockRecorder is the mock recorder for MockCartInterface.
type MockCartInterfaceMockRecorder struct {
	mock *MockCartInterface
}

// NewMockCartInterface creates a new mock instance.
func NewMockCartInterface(ctrl *gomock.Controller) *MockCartInterface {
	mock := &MockCartInterface{ctrl: ctrl}
	mock.recorder = &MockCartInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCartInterface) EXPECT() *MockCartInterfaceMockRecorder {
	return m.recorder
}

// AddProduct mocks base method.
func (m *MockCartInterface) AddProduct(ctx context.Context, userId int, input domain.CartInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddProduct", ctx, userId, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddProduct indicates an expected call of AddProduct.
func (mr *MockCartInterfaceMockRecorder) AddProduct(ctx, userId, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddProduct", reflect.TypeOf((*MockCartInterface)(nil).AddProduct), ctx, userId, input)
}

// CheckoutCart mocks base method.
func (m *MockCartInterface) CheckoutCart(ctx context.Context, userId int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckoutCart", ctx, userId)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckoutCart indicates an expected call of CheckoutCart.
func (mr *MockCartInterfaceMockRecorder) CheckoutCart(ctx, userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckoutCart", reflect.TypeOf((*MockCartInterface)(nil).CheckoutCart), ctx, userId)
}

// ListCart mocks base method.
func (m *MockCartInterface) ListCart(ctx context.Context, userId int) (domain.Cart, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListCart", ctx, userId)
	ret0, _ := ret[0].(domain.Cart)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListCart indicates an expected call of ListCart.
func (mr *MockCartInterfaceMockRecorder) ListCart(ctx, userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListCart", reflect.TypeOf((*MockCartInterface)(nil).ListCart), ctx, userId)
}
